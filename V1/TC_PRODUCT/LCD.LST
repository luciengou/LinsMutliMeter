C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN LCD.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE LCD.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*******************************************
   2          /*  JAPAN PROJECT  "JA-1 "
   3          /*
   4          /*
   5          /*******************************************/
   6          
   7          #include<MPC82G516.h>
   8          #include<LCD.h>
   9          
  10          
  11          
  12          
  13          
  14          
  15          const  unsigned char code Machine_ID[5][5] = {{18,20,3,0,5},            //PL305
  16                                                                                                    {18,20,5,0,5},                //PL505
  17                                                                                                    {23,10,18,10,22},     //JAPAN
  18                                                                                                    {18,20,9,0,5},                //PL905
  19                                                                                                    {23,10,16,1,17},      //JA-1
  20                                                                                                  };
  21          
  22          // ----------------------------     0    1    2    3    4    5    6    7    8    9    A    B    C    D    
             -E           F        -       BLANK, P,  H,   L,   U,   n        J
  23          const  unsigned char code NUM5[24]={0x5F,0x50,0x3D,0x79,0x72,0x6B,0x6F,0x51,0x7F,0x7B,0x77,0x6E,0x0F,0x7C,
             -0x2F,0x27,0x20,0x00,0x37,0x76,0x0e,0x5E,0x57,0x58};  //c/sec/min/ph
  24          
  25          
  26          // ----------------------------0    1    2  3   4   5   6   7   8   9   A   B   C       D       E       F       -       BLANK  U
  27          
  28          const unsigned char code NUM4[19]={0x5F,0x50,0x6B,0x79,0x74,0x3D,0x3F,0x58,0x7F,0x7D,0x7E,0x37,0x0F,0x73,0
             -x2F,0x2E,0x20,0x00,0x57};  //ÈÝÁ¿
  29          
  30          
  31          
  32          // ----------------------------0    1    2  3   4   5   6   7   8   9   A       B       C       D       E       F       -       BLANK
  33          
  34          const unsigned char code NUM1[18]={0x5F,0x50,0x6B,0x79,0x74,0x3D,0x3F,0x58,0x7F,0x7D,0x7E,0x37,0x0F,0x73,0
             -x2F,0x2E,0x20,0x00};  //Er Work TABLE
  35          
  36          
  37          
  38          
  39          
  40          void RGB(unsigned char r,unsigned char g,unsigned char b) ;
  41          //unsigned char iDisplayValue[5];
  42          
  43          
  44          
  45          unsigned char idata x1=0,k3=0,x3=0,orp=0,x4=0,tds=0,k2=0,
  46                        k4=0, ErrorWork1=0,
  47                        Alkaline_flag=0,r6=0,Acidic_flag=0,
  48                        Filtered_flag=0,Alkaline1=0,
  49                        Er=0,day=0,mv=0,ppm=0,
  50                        r4=0,c1=0,sec1=0,min1=0,
  51                        r1=0,r3=0,r5=0,r2=0;
C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 2   

  52                        picture1=0,picture2=0,picture3=0,picture4=0,picture5=0,picture6=0;        
  53          
  54           
  55           
  56          
  57          void RGB(unsigned char r,unsigned char g,unsigned char b) 
  58          
  59          { 
  60   1      unsigned char temp;
  61   1      
  62   1      //      red_    =1;
  63   1      //      green_  =1;
  64   1      //      blue_   =1;
  65   1              
  66   1              
  67   1              
  68   1              //Pre_color=Color;
  69   1      #if 0   
                      CCAP0L=CCAP0H=r;   
                      CCAP1L=CCAP1H=g;   
                      CCAP2L=CCAP2H=b;
              #else
  74   1      // 20120201 arnold
  75   1      temp = r;
  76   1              //CCAP0L=CCAP0H=~r;
  77   1              CCAP1L=CCAP1H=~g;   
  78   1              CCAP2L=CCAP2H=~b;
  79   1      #endif  
  80   1              
  81   1              CMOD=0x00; 
  82   1              CL=0x00;
  83   1              CH=0x00;
  84   1              
  85   1              
  86   1              //CCAPM0=0x42; 
  87   1              CCAPM1=0x42; 
  88   1              CCAPM2=0x42; 
  89   1              
  90   1              CR=1;
  91   1              CCON= 0x0E;
  92   1              CR=1;
  93   1              
  94   1      }                                 
  95          /*  /#if China
  96          void WriteLCD(uchar Value)
  97          {
  98              LCD_Data=Value;
  99              LCD_A0=1;
 100              _nop_();
 101              LCD_CS=1;
 102              _nop_();
 103              LCD_WR=1;
 104              _nop_();
 105              _nop_();
 106              LCD_WR=0;
 107              _nop_();
 108              LCD_CS=0;
 109           }
 110          
 111          void DisplayDataWrite(uchar Value)
 112          {
 113              LCD_Data=Value;
C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 3   

 114              LCD_A0=0;
 115              _nop_();
 116              LCD_CS=1;
 117              _nop_();
 118              LCD_WR=1;
 119              _nop_();
 120              LCD_WR=0;
 121              _nop_();
 122              LCD_CS=0;
 123          }
 124          
 125          
 126          //#endif
 127          
 128          //#if TW
 129          */
 130          void WriteLCD(uchar Value)
 131          {
 132   1          LCD_Control_LE2=0;
*** ERROR C202 IN LINE 132 OF LCD.C: 'LCD_Control_LE2': undefined identifier
 133   1           LCD_Data_LE1=1;
*** ERROR C202 IN LINE 133 OF LCD.C: 'LCD_Data_LE1': undefined identifier
 134   1              _nop_();
 135   1             LCD_Data=Value;
 136   1              _nop_();
 137   1              _nop_();
 138   1          LCD_Data_LE1=0;
 139   1              _nop_();
 140   1              _nop_();
 141   1      #if 0
                  //LCD_A0=1;
                  LCD_Control_LE2=1;
                      _nop_();
                      _nop_();
                  Set_LCM_Control_A0_();
                      _nop_();
                       _nop_();
                      P0=LCM_Control;
                  //LCD_CS=0;
                  Clr_LCM_Control_CSn();
                      _nop_();
                      _nop_();
                      P0=LCM_Control;
                  //    LCD_WR=0;
                  Clr_LCM_Control_WR();
                      _nop_();
                      _nop_();
                      _nop_();
                      P0=LCM_Control;
                  //    LCD_WR=1;
                   Set_LCM_Control_WR();
                      _nop_();
                     _nop_();
                      _nop_();
                      P0=LCM_Control;
                 //    LCD_CS=1;
                      Set_LCM_Control_CSn();
                      _nop_();
                     _nop_();
                      _nop_();
                      P0=LCM_Control;
                      _nop_();
C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 4   

                     _nop_();
                      _nop_();
                      _nop_();
                     _nop_();
                      _nop_();
                      _nop_();
                     _nop_();
                      _nop_();
                      _nop_();
                     _nop_();
                      _nop_();
                      _nop_();
                     _nop_();
                      _nop_();
                      _nop_();
                     _nop_();
                      _nop_();
                      _nop_();
                     _nop_();
                      _nop_();
                      _nop_();
                     _nop_();
                      _nop_();
                      LCD_Control_LE2=0;
                      
              #else
 200   1          LCD_A0=1;
 201   1          _nop_();
 202   1          LCD_CS=0;
 203   1          _nop_();
 204   1          LCD_WRn=0;
 205   1          _nop_();
 206   1          _nop_();
 207   1          LCD_WRn=1;
 208   1          _nop_();
 209   1          LCD_CS=1;
 210   1      #endif
 211   1              
 212   1       }
 213          
 214          void DisplayDataWrite(uchar Value)
 215          {
 216   1          LCD_Control_LE2=0;  
 217   1              LCD_Data_LE1=1;
 218   1              _nop_();
 219   1              LCD_Data=Value;
 220   1              _nop_();
 221   1              _nop_();
 222   1          LCD_Data_LE1=0;
 223   1              _nop_();
 224   1              _nop_();
 225   1      
 226   1              #if 0
                  LCD_Control_LE2=1;
              //    LCD_A0=0;
                  Clr_LCM_Control_A0_();
                      _nop_();
                       _nop_();
                      P0=LCM_Control;
                  //LCD_CS=0;
                  Clr_LCM_Control_CSn();
                      _nop_();
C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 5   

                      _nop_();
                      P0=LCM_Control;
                  //    LCD_WR=0;
                  Clr_LCM_Control_WR();
                      _nop_();
                      _nop_();
                      _nop_();
                      P0=LCM_Control;
                  //    LCD_WR=1;
                   Set_LCM_Control_WR();
                      _nop_();
                     _nop_();
                      _nop_();
                      P0=LCM_Control;
                 //    LCD_CS=1;
                      Set_LCM_Control_CSn();
                      _nop_();
                     _nop_();
                      _nop_();
                      P0=LCM_Control;
                      _nop_();
                     _nop_();
                      _nop_();
                      _nop_();
                     _nop_();
                      _nop_();
                      _nop_();
                     _nop_();
                      _nop_();
                      _nop_();
                     _nop_();
                      _nop_();
                      _nop_();
                     _nop_();
                      _nop_();
                      _nop_();
                     _nop_();
                      _nop_();
                      _nop_();
                     _nop_();
                      _nop_();
                      _nop_();
                     _nop_();
                      _nop_();
                      LCD_Control_LE2=0;
                      #else
 282   1        LCD_A0=0;
 283   1                _nop_();
 284   1        LCD_CS=0;
 285   1          _nop_();
 286   1        LCD_WRn=0;
 287   1          _nop_();
 288   1        LCD_WRn=1;
 289   1          _nop_();
 290   1        LCD_CS=1;
 291   1          _nop_();
 292   1              #endif
 293   1      
 294   1      }
 295          
 296          /*
 297          unsigned char DisplayDataRead(void)
C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 6   

 298          {
 299              unsigned char i;
 300              //LCD_Data=Value;
 301              LCD_A0=0;
 302              _nop_();
 303              LCD_CS=0;
 304              _nop_();
 305              LCD_RD=1;
 306              _nop_();
 307              LCD_RD=0;
 308              _nop_();
 309              i=LCD_Data;
 310              _nop_();
 311              LCD_CS=1;
 312              return(i);
 313          }
 314          */
 315          //#endif
 316          
 317          void DisplayON()
 318          {
 319   1         WriteLCD(0xaf);
 320   1      } 
 321          /*void DisplayOFF()
 322          {
 323             WriteLCD(0xae);
 324          }
 325          */
 326          void DisplayNormal()
 327          {
 328   1         WriteLCD(0xa6);
 329   1      }
 330          /*
 331          void DisplayReverse()
 332          {
 333             WriteLCD(0xa7);
 334          }
 335          
 336          void DisplayAllPointsON()
 337          {
 338             WriteLCD(0xa5);
 339          }
 340          */
 341          void DisplayAllPointsOFF()     //normal display
 342          {
 343   1         WriteLCD(0xa4);
 344   1      }
 345          
 346          void PowerControlSet()  //This command sets the on-chip power supply function ON/OFF.
 347          {
 348   1         WriteLCD(0x2f);
 349   1      }
 350          
 351          void PageAddressSet()
 352          {
 353   1         WriteLCD(0xb0);        //
 354   1      
 355   1      }
 356          
 357          void ColumnAddressSet(unsigned char ColumnAddress)
 358          {
 359   1      
C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 7   

 360   1          WriteLCD(0x10+(ColumnAddress>>4)); //X6 X5 X4  
 361   1          _nop_();
 362   1          _nop_();
 363   1          WriteLCD(ColumnAddress&0x0f);     //X3 X2 X1 X0
 364   1          _nop_();
 365   1          _nop_();
 366   1      }
 367          
 368          void SegmentDriverDirectionSelect()    //seg0-seg95
 369          {
 370   1      #if old_LCM
*** WARNING C322 IN LINE 370 OF LCD.c: unknown identifier
                WriteLCD(0xa0);
              #endif
 373   1      
 374   1      #if new_LCM
*** WARNING C322 IN LINE 374 OF LCD.c: unknown identifier
                WriteLCD(0xa1);
              #endif
 377   1      
 378   1      
 379   1      }
 380          void CommonDriverDirectionSelect()    //com0-com3
 381          {
 382   1      //  WriteLCD(0xc0); //old Lcm
 383   1      //  WriteLCD(0xc8); //new Lcm
 384   1      
 385   1      #if old_LCM
*** WARNING C322 IN LINE 385 OF LCD.c: unknown identifier
                WriteLCD(0xc0);
              #endif
 388   1      
 389   1      #if new_LCM
*** WARNING C322 IN LINE 389 OF LCD.c: unknown identifier
                WriteLCD(0xc0);
              #endif
 392   1      
 393   1      
 394   1      }
 395          
 396          void EnterModeSet()
 397          {
 398   1        WriteLCD(0xf1);
 399   1      }
 400          
 401          void DutyModeSet()       // 1/4duty
 402          {
 403   1        WriteLCD(0xac);
 404   1      }
 405          
 406          void FinishModeSet()
 407          {
 408   1        WriteLCD(0xf0);
 409   1      }
 410          
 411          
 412          void delay(int i)
 413          {
 414   1         while(i)i--;
 415   1      }
 416          
 417          
C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 8   

 418          void MoreDelay(int i)
 419          {
 420   1              while(i--){
 421   2                 delay(10000);
 422   2              }
 423   1      }
 424          
 425          
 426          
 427          void LCDInit()
 428          {
 429   1      //unsigned char idata LCM_Control   ;
 430   1      /* 
 431   1           LCM_Control Define 
 432   1            bit 0 LCM Reset 
 433   1           bit 1 LCM /CS
 434   1           bit 2 LCM A0
 435   1           bit 3 LCM W/R
 436   1           bit 4 LCM E
 437   1           bit 5 H+ ON/OFF
 438   1           bit 6 CO2 ON/Off 
 439   1           bit 7 xx
 440   1       */
 441   1      //      LCD_RETB = 1;
 442   1      //      delay(5000);
 443   1      //      LCD_RETB = 0;
 444   1      //      delay(5000);
 445   1      //   delay(DElay0_num);
 446   1       
 447   1      #if China
*** WARNING C322 IN LINE 447 OF LCD.c: unknown identifier
                 //LCD_CS = 1;
                 //LCD_WR=0;
                 // LCD_RD=0;
              Set_LCM_Control_CSn();
              Clr_LCM_Control_WR();
              Clr_LCM_Control_LCD_E();
              LCD_Latch_Write();
              #endif
 456   1      
 457   1      #if TW
*** WARNING C322 IN LINE 457 OF LCD.c: unknown identifier
              #if 1
              //LCD_CS = 1;
                LCD_WRn=1;
                 // LCD_RD=1;
              #else
                 P0=LCM_Control;
                 LCD_Control_LE2=1;
                      _nop_();
                      _nop_();
                      //LCD_CS = 0;
                  //Clr_LCM_Control_CSn();
                      _nop_();
                       _nop_();
                      
              //  LCD_WR=1;         //QianShan
                  Set_LCM_Control_WR();
                       _nop_();
                       _nop_();
                       P0=LCM_Control;
               //LCD_RD=1;           //QianShan
C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 9   

                  Set_LCM_Control_LCD_E();
                       _nop_();
                       _nop_();
                       P0=LCM_Control;
                      _nop_();
                      _nop_();
                       LCD_Control_LE2=0;
              #endif
              #endif
 487   1          delay(DElay0_num);
 488   1          PowerControlSet();
 489   1          delay(DElay0_num);
 490   1          PageAddressSet();
 491   1          delay(DElay0_num);
 492   1          ColumnAddressSet(0x00);
 493   1          EnterModeSet();
 494   1          delay(DElay0_num);
 495   1          DutyModeSet();
 496   1          delay(DElay0_num);
 497   1          FinishModeSet();
 498   1          delay(DElay0_num);
 499   1          DisplayAllPointsOFF();
 500   1          delay(DElay0_num);
 501   1          DisplayON();
 502   1          delay(DElay0_num);
 503   1          DisplayNormal();
 504   1          delay(DElay0_num);
 505   1          SegmentDriverDirectionSelect();
 506   1          delay(DElay0_num);
 507   1          CommonDriverDirectionSelect();
 508   1          delay(DElay0_num);
 509   1      }
 510          
 511          
 512          void lcd_all_off(void)
 513          {
 514   1         unsigned char LCMaddr=0;
 515   1         PageAddressSet();
 516   1         ColumnAddressSet(0x00);
 517   1         for(LCMaddr=0;LCMaddr<=Lcm_max_line;LCMaddr++)
 518   1         {
 519   2            DisplayDataWrite(0x00);
 520   2            c
 521   2         }
 522   1         
 523   1         x1=0;k3=0;x3=0;orp=0;x4=0;tds=0;k2=0;
 524   1         k4=0; ErrorWork1=0;
 525   1         Alkaline_flag=0;r6=0;Acidic_flag=0;
 526   1       Filtered_flag=0;Alkaline1=0;
 527   1       Er=0;day=0;mv=0;ppm=0;
 528   1      r4=0;c1=0;sec1=0;min1=0;
 529   1      r1=0;r3=0;r5=0;r2=0;
 530   1      picture1=0,picture2=0,picture3=0,picture4=0,picture5=0,picture6=0;
 531   1        
 532   1      } 
 533          
 534          
 535          void Lcd_DisplayFilterLife(unsigned long DisplayValue,unsigned char count,unsigned char status,unsigned ch
             -ar K_status)
 536          {
 537   1         
 538   1              unsigned char a5,a4,a3,a2,a1;
C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 10  

 539   1              unsigned char k5,k6,k7,k8,k9,flag,flag1,L_flag = 0;    // 2011/04/19
 540   1              unsigned long temp;
 541   1              
 542   1              
 543   1              switch(count)
 544   1              {
 545   2                      case 0:k5=0;k6=0;k7=0;k8=0;k9=0;break;
 546   2                      case 1:k5=1;k6=0;k7=0;k8=0;k9=0;break;
 547   2                      case 2:k5=1;k6=1;k7=0;k8=0;k9=0;break;
 548   2                      case 3:k5=1;k6=1;k7=1;k8=0;k9=0;break;
 549   2                      case 4:k5=1;k6=1;k7=1;k8=1;k9=0;break;
 550   2                      case 5:k5=1;k6=1;k7=1;k8=1;k9=1;break;
 551   2              } 
 552   1      
 553   1              switch (K_status){
 554   2                      case 0:
 555   2                              k4=0;
 556   2                              flag1=0xfe;
 557   2                              break;
 558   2                      case 1:
 559   2                              k4=1;
 560   2                              flag1=0xff;
 561   2                              break;
 562   2                      case 2:
 563   2                              k4=0;
 564   2                              flag1=0xff;
 565   2                              break;
 566   2                      default:
 567   2                              k4=0;
 568   2                              flag1=0xfe;
 569   2                              break;
 570   2              }
 571   1      
 572   1              if(status==0){
 573   2                      flag1 &= 0x01;
 574   2                      flag=0x00;
 575   2                      L_flag=0;
 576   2              }else{
 577   2                      flag1 |= 0xfe;
 578   2                      flag=0xff;
 579   2                      L_flag=1;
 580   2              }
 581   1      
 582   1              if(status==1){     //normal display
 583   2                      temp = DisplayValue;
 584   2                      a5 = (unsigned char)(temp/10000);
 585   2                      temp = DisplayValue % 10000;
 586   2                      a4=(unsigned char)(temp/1000);
 587   2                      temp = DisplayValue % 1000;
 588   2                      a3=(unsigned char)(temp/100);
 589   2                      temp = DisplayValue % 100;
 590   2                      a2=(unsigned char)(temp/10);
 591   2                      temp = DisplayValue % 10;
 592   2                      a1=(unsigned char)temp;  
 593   2              }else if(status==2){             //display volage
 594   2                      a5=17;        //bank
 595   2                      a4=(unsigned char)(DisplayValue/10);
 596   2                      a3=(unsigned char)(DisplayValue%10);
 597   2                      a2=17;    //bank
 598   2                      a1=18;   //"U" 
 599   2                      k4=0;k5=0;k6=0;k7=0;k8=0;k9=0; 
 600   2                      L_flag=0;  
C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 11  

 601   2              }else if(status==3){
 602   2                      a5=16;        //"-"
 603   2                      temp = DisplayValue % 10000;
 604   2                      a4=(unsigned char)(temp/1000);
 605   2                      temp = DisplayValue % 1000;
 606   2                      a3=(unsigned char)(temp/100);
 607   2                      temp = DisplayValue % 100;
 608   2                      a2=(unsigned char)(temp/10);
 609   2                      temp = DisplayValue % 10;
 610   2                      a1=(unsigned char)temp;  
 611   2              }else if(status==4){     //work display
 612   2                      temp = DisplayValue;
 613   2                      a5=(unsigned char)(temp/10000);
 614   2                      temp = DisplayValue % 10000;
 615   2                      a4=(unsigned char)(temp/1000);
 616   2                      temp = DisplayValue % 1000;
 617   2                      a3=(unsigned char)(temp/100);
 618   2                      temp = DisplayValue % 100;
 619   2                      a2=(unsigned char)(temp/10);
 620   2                      temp = DisplayValue % 10;
 621   2                      a1=(unsigned char)temp;  
 622   2                      L_flag=0;  
 623   2              }
 624   1       
 625   1                  PageAddressSet();
 626   1                  ColumnAddressSet(0x17);                                   //seg23
 627   1                  DisplayDataWrite((k4<<3)|ErrorWork1);                     //K4
 628   1              
 629   1              DisplayDataWrite((NUM4[a5]&0x00)&flag);            // k5,5
 630   1              DisplayDataWrite(((NUM4[a5]&0x00)>>3|k5)&0x01);
 631   1      
 632   1              DisplayDataWrite((NUM4[a4]&0x00)&flag);            // k6,4
 633   1              DisplayDataWrite(((NUM4[a4]&0x00)>>3|k6)&0x01);
 634   1              
 635   1              DisplayDataWrite((NUM4[a3]&0x00)&flag);            // k7,3
 636   1              DisplayDataWrite(((NUM4[a3]&0x00)>>3|k7)&0x01);
 637   1              
 638   1              DisplayDataWrite((NUM4[a2]&0x00)&flag);            // k8,2
 639   1              DisplayDataWrite(((NUM4[a2]&0x00)>>3|k8)&0x01);
 640   1              
 641   1              DisplayDataWrite((NUM4[a1]&0x00)&flag);            // k9.1
 642   1              DisplayDataWrite(((NUM4[a1]&0x00)>>3|k9)&0x01);
 643   1      
 644   1      }
 645          
 646          
 647          void Lcd_DisplayLock(bit status)
 648          {
 649   1              k3=status;
 650   1              PageAddressSet();
 651   1              ColumnAddressSet(0x05);
 652   1              DisplayDataWrite((x1<<1)|k3);  //k3
 653   1      }
 654          
 655          
 656          
 657          
 658          void Lcd_DisplayVolume(unsigned char Volume,bit status)   //ÏÔÊ¾ÒôÁ¿´óÐ¡
 659          {
 660   1         
 661   1          uchar x2;
 662   1          x1=status;
C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 12  

 663   1          switch(Volume)
 664   1         {
 665   2           case 0:x2=0;x3=0;x4=0;break;
 666   2           case 1:x2=status;x3=0;x4=0;break;
 667   2           case 2:x2=status;x3=status;x4=0;break;
 668   2           case 3:x2=status;x3=status;x4=status;break;
 669   2         }
 670   1      
 671   1         PageAddressSet();
 672   1         ColumnAddressSet(0x05);
 673   1         
 674   1       
 675   1         DisplayDataWrite((x1<<1)|k3); //X1
 676   1         DisplayDataWrite(x2<<1); //X2
 677   1         DisplayDataWrite((x3<<1)|(orp<<2)); //X3
 678   1         DisplayDataWrite((x4<<1)|(tds<<2)|(k2<<3)); //X4 
 679   1         
 680   1         
 681   1      }
 682          
 683          
 684          
 685          /*****************************************/
 686          void  Lcd_DisplayErrorWorkTable(unsigned char mode,unsigned char value,bit status)   //Error Or WorkTable
 687          {
 688   1              unsigned char a1,a2,k1,flag;
 689   1              
 690   1              if(status==0)   
 691   1              {
 692   2                      Er=0;
 693   2                      ErrorWork1=0;
 694   2                      k1=0;
 695   2                      flag=0x00;
 696   2              }else{
 697   2                      flag=0xff;
 698   2              }
 699   1      
 700   1      
 701   1               a2=value/10;
 702   1               a1=value%10;
 703   1               if(mode==Error)   //Error table
 704   1               {
 705   2                  Er=status;
 706   2                  PageAddressSet();
 707   2                  ColumnAddressSet(0x13);
 708   2                  DisplayDataWrite(Er|(day<<1)|(mv<<2)|(ppm<<3));  //Er
 709   2                      k1=0;
 710   2               }
 711   1               if(mode==WorkTable)      //WorkTable
 712   1               {
 713   2                  k1=status;
 714   2                  PageAddressSet();
 715   2                  ColumnAddressSet(0x15);
 716   2                  DisplayDataWrite(k1<<3);  //K1
 717   2                      if (value == 0)
 718   2                              {a2=17;a1=17;}  
 719   2               }
 720   1               PageAddressSet();
 721   1               ColumnAddressSet(0x14);
 722   1               DisplayDataWrite((NUM1[a2]&0x0f)&flag);                 
 723   1               DisplayDataWrite((((NUM1[a2]&0xf0)>>4)|(k1<<3))&flag);
 724   1      
C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 13  

 725   1               DisplayDataWrite((NUM1[a1]&0x0f)&flag);                         
 726   1               DisplayDataWrite(((NUM1[a1]&0xf0)>>4)&flag|(k4<<3));
 727   1      
 728   1               ErrorWork1=((NUM1[a1]&0xf0)>>4)&flag;
 729   1      }
 730          /***************************************************/
 731          void  Lcd_DisplayCSECLmin(unsigned char mode,unsigned int value,bit status)   //C SEC L/MIN
 732          {
 733   1             unsigned char a1,a2,a3,flag,flag1=1;
 734   1             
 735   1                      
 736   1              if(status==0)   
 737   1              {
 738   2                 c1=0;
 739   2                 sec1=0;
 740   2                 min1=0;
 741   2                 flag=0x00;
 742   2      
 743   2                 a3=value/100;
 744   2                 a2=value/10%10;
 745   2                 a1=value%10;
 746   2              }
 747   1              else flag=0xff;
 748   1               
 749   1                       if(mode==C_wendu)   //C_wendu
 750   1               {
 751   2                  c1=status;
 752   2                  PageAddressSet();
 753   2                  ColumnAddressSet(0x29);
 754   2                  DisplayDataWrite(r4|(c1<<1)); 
 755   2                  picture4=c1<<1; 
 756   2      
 757   2                  a3=value/100;
 758   2                 a2=value/10%10;
 759   2                 a1=value%10;
 760   2               }
 761   1               if(mode==SEC)    //SEC
 762   1               {
 763   2                  sec1=status;
 764   2                  PageAddressSet();
 765   2                  ColumnAddressSet(0x29);
 766   2                  DisplayDataWrite(r4|(sec1<<2)); 
 767   2                  picture4=sec1<<2;
 768   2      
 769   2                  a3=value/100;
 770   2                  a2=value/10%10;
 771   2                  a1=value%10;
 772   2               }
 773   1               if(mode==__SHOW_LPM__)   //Lmin
 774   1               {
 775   2                  min1=status;
 776   2                  PageAddressSet();
 777   2                  ColumnAddressSet(0x29);
 778   2                  DisplayDataWrite(r4|(min1<<3)); // Display Lmin  
 779   2                  picture4=min1<<3;
 780   2                  a3=value/100;
 781   2                  a2=value/10%10;
 782   2                  a1=value%10;
 783   2               }
 784   1               if(mode==4)   // no display dan wei
 785   1               {
 786   2              
C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 14  

 787   2                  PageAddressSet();
 788   2                  ColumnAddressSet(0x29);
 789   2                  DisplayDataWrite(r4); 
 790   2                  picture4=0;
 791   2                  flag1=0;
 792   2                              a3 = value/100;
 793   2                  a2=value/10%10;
 794   2                 a1=value%10;
 795   2               }
 796   1               if(mode==5)  //display  current
 797   1               {
 798   2                  a3=10;
 799   2                 a2=value/10;
 800   2                 a1=value%10;
 801   2               }
 802   1               if(mode==6) //display "ALL"
 803   1               {
 804   2                   
 805   2                  PageAddressSet();
 806   2                  ColumnAddressSet(0x29);
 807   2                  DisplayDataWrite(r4); 
 808   2                  picture4=0;
 809   2                  flag1=0;
 810   2                  a3=10;
 811   2                  a2=20;
 812   2                 a1=20;
 813   2               }
 814   1               if(mode==7)   //display  30.L
 815   1               {
 816   2                  PageAddressSet();
 817   2                  ColumnAddressSet(0x29);
 818   2                  DisplayDataWrite(r4); 
 819   2                  picture4=0;
 820   2                  a3=value/10;
 821   2                  a2=value%10;
 822   2                  a1=20;
 823   2               }
 824   1               PageAddressSet();
 825   1               ColumnAddressSet(0x23);
 826   1               DisplayDataWrite((NUM5[a3]&0x0f)&flag);                 
 827   1               DisplayDataWrite(((NUM5[a3]&0xf0)>>3)&flag);
 828   1      
 829   1               
 830   1               DisplayDataWrite((NUM5[a2]&0x0f)&flag);                         
 831   1               DisplayDataWrite(((NUM5[a2]&0xf0)>>3|flag1)&flag);
 832   1               
 833   1               DisplayDataWrite((NUM5[a1]&0x0f)&flag);                 
 834   1               DisplayDataWrite(((NUM5[a1]&0xf0)>>3)&flag);
 835   1            
 836   1      }
 837          /*************************************************************/
 838          void Lcd_Display_H(uchar koop)    
 839          {
 840   1               uchar Loop, a5,a4,a3,a2,a1 ;
 841   1               Loop = koop ;
 842   1      
 843   1                  
 844   1               if (Loop == 5) {a5=19,a4=16,a3=16,a2=16,a1=16 ;}
 845   1               if (Loop == 4) {a5=16,a4=19,a3=16,a2=16,a1=16 ;}  
 846   1               if (Loop == 3) {a5=16,a4=16,a3=19,a2=16,a1=16 ;}  
 847   1               if (Loop == 2) {a5=16,a4=16,a3=16,a2=19,a1=16 ;}  
 848   1               if (Loop == 1) {a5=16,a4=16,a3=16,a2=16,a1=19 ;} 
C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 15  

 849   1      
 850   1                 PageAddressSet();
 851   1             ColumnAddressSet(0x07); 
 852   1               
 853   1              PageAddressSet();
 854   1             ColumnAddressSet(0x09);
 855   1             DisplayDataWrite((NUM5[a5]&0x0f));
 856   1             DisplayDataWrite(((NUM5[a5]&0xf0)>>3)&0x0f);
 857   1             picture1=(((NUM5[a5]&0xf0)>>3)&0x0f);
 858   1      
 859   1             DisplayDataWrite((NUM5[a4]&0x0f));
 860   1             DisplayDataWrite(((NUM5[a4]&0xf0)>>3)&0x0f);
 861   1             picture3=(((NUM5[a4]&0xf0)>>3)&0x0f);
 862   1      
 863   1             DisplayDataWrite((NUM5[a3]&0x0f));
 864   1             DisplayDataWrite(((NUM5[a3]&0xf0)>>3)&0x0f);              
 865   1             picture5=(((NUM5[a3]&0xf0)>>3)&0x0f);         
 866   1                       
 867   1             DisplayDataWrite((NUM5[a2]&0x0f));        
 868   1             DisplayDataWrite((NUM5[a2]&0xf0)>>3);
 869   1               
 870   1            DisplayDataWrite((NUM5[a1]&0x0f));         
 871   1            DisplayDataWrite(((NUM5[a1]&0xf0)>>3));
 872   1            picture2=((NUM5[a1]&0xf0)>>3);
 873   1      }
 874          /*************************************************************/
 875          void  Lcd_Display_Count(unsigned long value)   //ph 
 876          {
 877   1             uchar  a5,a4,a3,a2,a1;
 878   1                  unsigned long temp;
 879   1       
 880   1              
 881   1                          a5= 17 ;      //blank  
 882   1                    temp=value;
 883   1              
 884   1                        a4=(uchar)(temp/100);
 885   1                
 886   1                        a3=(uchar)(temp/10%10);
 887   1                
 888   1                        a2=(uchar)(temp%10);
 889   1                
 890   1                        a1=17;
 891   1                    ppm = 0;
 892   1                        tds = 0;
 893   1      
 894   1             PageAddressSet();
 895   1             ColumnAddressSet(0x07);
 896   1         
 897   1             PageAddressSet();
 898   1             ColumnAddressSet(0x09);
 899   1             DisplayDataWrite((NUM5[a5]&0x0f));
 900   1             DisplayDataWrite(((NUM5[a5]&0xf0)>>3)&0x0f);
 901   1             picture1=(((NUM5[a5]&0xf0)>>3)&0x0f);
 902   1      
 903   1             DisplayDataWrite((NUM5[a4]&0x0f));
 904   1             DisplayDataWrite(((NUM5[a4]&0xf0)>>3)&0x0f);
 905   1             picture3=(((NUM5[a4]&0xf0)>>3)&0x0f);
 906   1      
 907   1             DisplayDataWrite((NUM5[a3]&0x0f));
 908   1             DisplayDataWrite(((NUM5[a3]&0xf0)>>3)&0x0f);              
 909   1             picture5=(((NUM5[a3]&0xf0)>>3)&0x0f);         
 910   1                       
C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 16  

 911   1             DisplayDataWrite((NUM5[a2]&0x0f));        
 912   1             DisplayDataWrite((NUM5[a2]&0xf0)>>3);
 913   1               
 914   1            DisplayDataWrite((NUM5[a1]&0x0f));         
 915   1            DisplayDataWrite(((NUM5[a1]&0xf0)>>3));
 916   1            picture2=((NUM5[a1]&0xf0)>>3);
 917   1      }
 918          /**************************************************/
 919          void  Lcd_DisplayValue(unsigned char mode,unsigned long value,bit status,bit value_flag)   //ph 
 920          {
 921   1              uchar a5,a4,a3,a2,a1,flag,flag1=1;
 922   1              unsigned long temp;
 923   1      
 924   1              if(status==0)
 925   1              {
 926   2                      flag=0x00;
 927   2              }
 928   1              else
 929   1              {
 930   2                      flag=0xff;
 931   2                      orp=0;
 932   2                      day=0;
 933   2                      
 934   2              }                      
 935   1      
 936   1      
 937   1              switch(mode)
 938   1              {
 939   2                      case 1:         //display japan
 940   2                      {
 941   3                              flag1=0 ;//dot for d4
 942   3                              orp=0 ;
 943   3                              day=0 ;
 944   3                              
 945   3                              a5=23;   //J       23,10,18,10,22
 946   3                              a4=10;   //A
 947   3                              a3=18;   //P
 948   3                              a2=10;   //A
 949   3                              a1=22;   //N
 950   3                              ppm =0;
 951   3                              tds =0; 
 952   3                      }
 953   2                      break; 
 954   2                      
 955   2                      /****************************************/                
 956   2                      case 4:         //display orp
 957   2                      {
 958   3                              if(value_flag==1)  
 959   3                              {
 960   4                                      a5=16;   // fu "-"
 961   4                              }
 962   3                              else
 963   3                              {       
 964   4                                      a5= 17;  //blank        zhen
 965   4                              }
 966   3                              
 967   3                              flag1=0;
 968   3                              orp=1;
 969   3                              day=0;
 970   3                              
 971   3                              if(value >= 999){ value = 999 ;}
 972   3                              temp=value;
C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 17  

 973   3                              a4=(uchar)(temp/100);
 974   3                              a3=(uchar)(temp/10%10);
 975   3                              a2=(uchar)(temp%10);
 976   3                              a1=17;
 977   3                              ppm = 0;
 978   3                              tds = 0;
 979   3                      }  
 980   2                      break;
 981   2              
 982   2                      /*********************************/
 983   2                      case 7:          //display day
 984   2                      {
 985   3                              orp=0;
 986   3                              day=1;
 987   3                              flag1=0;
 988   3                              temp = value;
 989   3                              a5=17; //  blank
 990   3                              temp = value;
 991   3                              a4=(unsigned char)(temp/1000);
 992   3                              temp = value % 1000;
 993   3                              a3=(unsigned char)(temp/100);
 994   3                              temp = value % 100;
 995   3                              a2=(unsigned char)(temp/10);
 996   3                              temp = value % 10;
 997   3                              a1=(unsigned char)temp;
 998   3                              ppm = 0;
 999   3                              tds = 0;
1000   3                      }
1001   2                      break;
1002   2                      /*******************************/
1003   2                      case 8:    // show TDS
1004   2                      {
1005   3                              orp=0;
1006   3                              day=0;
1007   3                              ppm = 1;
1008   3                              tds = 1;
1009   3                              flag1=0;
1010   3                              a1=17; // blank
1011   3                              a5=17; // blank
1012   3                              temp = value;
1013   3                              a4=(unsigned char)(temp/100);
1014   3                              temp = value % 100;
1015   3                              a3=(unsigned char)(temp/10);
1016   3                              temp = value % 10;
1017   3                              a2=(unsigned char)temp;
1018   3                      }
1019   2                      break;
1020   2                      /***************************************/
1021   2                      case 9:      // show Language
1022   2                      {
1023   3                              orp=0;
1024   3                              day=0;
1025   3                              ppm = 0;
1026   3                              tds = 0;
1027   3                              flag1=0;
1028   3                              a4 =17;
1029   3                              a5 =17;
1030   3                      
1031   3                              switch(value)
1032   3                              {
1033   4                                      case __MENU_LANG_JPN__:   //JPN
1034   4                                              a3=23;
C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 18  

1035   4                                              a2=18;
1036   4                                              a1=22;
1037   4                                              break;
1038   4                                      case __MENU_LANG_ENG__:   //ENG
1039   4                                              a3=14;
1040   4                                              a2=22;
1041   4                                              a1=6;
1042   4                                              break;
1043   4                                      case __MENU_LANG_CHT__:   //CHI
1044   4                                              a3=12;
1045   4                                              a2=19;
1046   4                                              a1=1;
1047   4                                              break;
1048   4                              }
1049   3                      }
1050   2                      break;
1051   2                      /****************************************/
1052   2                      case __MENY_MACHINE_ID__:               // show Machine_ID
1053   2      
1054   2                              flag1=0;
1055   2                              orp=0;
1056   2                              day=0;
1057   2                              
1058   2                              a5=Machine_ID[value][0] ;
1059   2                              a4=Machine_ID[value][1] ;
1060   2                              a3=Machine_ID[value][2] ;
1061   2                              a2=Machine_ID[value][3] ;
1062   2                              a1=Machine_ID[value][4] ; 
1063   2                              
1064   2                              ppm = 0;
1065   2                              tds = 0;
1066   2      
1067   2                              break;
1068   2                      /****************************************/       
1069   2                      case 11:  //work 11 display SAVE
1070   2      
1071   2                              orp=0;
1072   2                              flag1=0;
1073   2                              day=0;
1074   2                              a5=5;    //  S
1075   2                              a4=10;   //  A
1076   2                              a3=21;   //  U
1077   2                              a2=14;   //  E
1078   2                              a1=17;   //  BLANK
1079   2                              ppm = 0;
1080   2                              tds = 0;
1081   2              
1082   2                              break;
1083   2                      /*************************************/
1084   2                      case 12:  //Ajust 6 display CLEAN
1085   2      
1086   2                              orp=0;
1087   2                              flag1=0;
1088   2                              day=0;
1089   2                              a5=12; //  C
1090   2                              a4=20; //  L
1091   2                              a3=14; //  E
1092   2                              a2=10; //  A
1093   2                              a1=22; //  N
1094   2                              ppm = 0;
1095   2                              tds = 0;
1096   2      
C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 19  

1097   2                              break;
1098   2              }
1099   1              /*********  DISPLAY  FUNCTION  **************/
1100   1              
1101   1              PageAddressSet();
1102   1              ColumnAddressSet(0x13);
1103   1              DisplayDataWrite(Er|(day<<1)|(mv<<2)|(ppm<<3));  //day
1104   1              
1105   1              PageAddressSet();
1106   1              ColumnAddressSet(0x07);
1107   1              
1108   1              //       DisplayDataWrite((x3<<1)|(orp<<2));              //orp
1109   1              //       DisplayDataWrite((x4<<1)|(tds<<2)|(k2<<3));      //tds
1110   1              
1111   1              PageAddressSet();
1112   1              ColumnAddressSet(0x09);
1113   1              DisplayDataWrite((NUM5[a5]&0x0f)&flag);
1114   1              DisplayDataWrite((((NUM5[a5]&0xf0)>>3)&0x0f&flag)|r1);
1115   1              picture1=((NUM5[a5]&0xf0)>>3)&0x0f&flag;
1116   1              //---------------------------------------------
1117   1              DisplayDataWrite((NUM5[a4]&0x0f)&flag);
1118   1              DisplayDataWrite((((NUM5[a4]&0xf0)>>3)&0x0f&flag)|r3);
1119   1              picture3=((NUM5[a4]&0xf0)>>3)&0x0f&flag;
1120   1              //---------------------------------------------
1121   1              
1122   1              DisplayDataWrite((NUM5[a3]&0x0f)&flag);
1123   1              DisplayDataWrite(((NUM5[a3]&0xf0)>>3)&0x0f&flag|r5);             
1124   1              picture5=((NUM5[a3]&0xf0)>>3)&0x0f&flag;         
1125   1              
1126   1              DisplayDataWrite((NUM5[a2]&0x0f)&flag);          
1127   1              DisplayDataWrite(((NUM5[a2]&0xf0)>>3|flag1)&flag);
1128   1              
1129   1              DisplayDataWrite((NUM5[a1]&0x0f)&flag);          
1130   1              DisplayDataWrite((((NUM5[a1]&0xf0)>>3)&flag)|r2);
1131   1              picture2=((NUM5[a1]&0xf0)>>3)&flag;
1132   1              
1133   1      }
1134                  
1135                  
1136          
1137          /**********  WATER MAP   ***************************/
1138          
1139          void Lcd_DisplayPicture(unsigned char Value,bit status)   //r1 r2 r3 r4 r5 r6
1140          {
1141   1          switch(Value)
1142   1         {
1143   2           case 5:r1=status;r2=status;r3=status;r4=status;r5=status;r6=status;break;
1144   2      
1145   2           case 1:r1=0;r2=status;r3=0;r4=0;r5=0;r6=0;break;
1146   2      
1147   2           case 2:r1=status;r2=status;r3=0;r4=status;r5=0;r6=0;break;
1148   2      
1149   2           case 3:r1=status;r2=0;r3=status;r4=status;r5=0;r6=status;break;
1150   2      
1151   2           case 4:r1=0;r2=status;r3=status;r4=0;r5=status;r6=status;break;
1152   2      
1153   2         }
1154   1      
1155   1         PageAddressSet();
1156   1         ColumnAddressSet(0x0a);
1157   1         DisplayDataWrite(picture1|r1);
1158   1       
C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 20  

1159   1         PageAddressSet();
1160   1         ColumnAddressSet(0x12);
1161   1         DisplayDataWrite(picture2|r2);
1162   1             
1163   1         PageAddressSet();
1164   1         ColumnAddressSet(0x0c);
1165   1         DisplayDataWrite(picture3|r3);
1166   1             
1167   1                                                                      
1168   1         PageAddressSet();
1169   1         ColumnAddressSet(0x29);
1170   1         DisplayDataWrite(r4|picture4);  
1171   1                      
1172   1          PageAddressSet();
1173   1          ColumnAddressSet(0x0e);
1174   1          DisplayDataWrite(picture5|r5);      
1175   1           
1176   1      
1177   1          PageAddressSet();
1178   1          ColumnAddressSet(0x04);
1179   1          DisplayDataWrite(picture6|r6); 
1180   1              
1181   1      }
1182          /**********************************************/
1183          void Lcd_Backlight(unsigned char BacklightValue)
1184          {
1185   1      
1186   1              switch(BacklightValue)
1187   1              {
1188   2                      case NOCOLOR:             //dark  0
1189   2                      
1190   2                      RGB(0,0,0);
1191   2                      //CCAPM0=0x40; 
1192   2                      CCAPM1=0x40; 
1193   2                      CCAPM2=0x40; 
1194   2      //              red_   = 0;
1195   2      //              green_ = 0;
1196   2      //              blue_  = 0;
1197   2                      break;
1198   2              
1199   2              case PURPLE:                //1
1200   2                 RGB(95,000,220);
1201   2                 break;
1202   2              
1203   2              case BLUENESS:               //2
1204   2                 RGB(015,010,170);
1205   2                 break;
1206   2              
1207   2              case WHITE:                      //3
1208   2                 RGB(000,010,60);
1209   2                 break;
1210   2              
1211   2              case YELLOW:                     //4
1212   2                 RGB(255,0,255);
1213   2                 break;
1214   2              
1215   2              case  BLUE:                      //5
1216   2                 RGB(000,000,255);
1217   2                 break;
1218   2              
1219   2              case ORANGE: 
1220   2                 RGB(255,255,000); //6
C51 COMPILER V7.50   LCD                                                                   12/09/2013 13:46:47 PAGE 21  

1221   2                 break;
1222   2              
1223   2              
1224   2              case GREEN:                      //7
1225   2                 RGB(000,255,000);
1226   2                 break;
1227   2              
1228   2              case RED:                         //8
1229   2                      RGB(255,000,000);
1230   2                      break;
1231   2              }
1232   1      
1233   1      }
1234          /************************************/ 

C51 COMPILATION COMPLETE.  6 WARNING(S),  2 ERROR(S)
