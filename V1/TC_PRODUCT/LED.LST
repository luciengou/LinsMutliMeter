C51 COMPILER V7.50   LED                                                                   12/19/2013 16:33:13 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN LED.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE LED.C LARGE OMF2

line level    source

   1          #include <MPC82G516.h>
   2          #include <intrins.h>
   3          #include <LED.h>
   4          
   5          sbit LED1_SCL = P1^0;
   6          sbit LED1_SDA = P1^1;
   7          sbit LED2_SCL = P1^2;
   8          sbit LED2_SDA = P1^3;
   9          sbit LED3_SCL = P1^4;
  10          sbit LED3_SDA = P1^5;
  11          
  12          
  13          //const unsigned char code tab_LED[23] = {
  14          //      0xAF,0xA0,0x6D,0xE9,0xE2,0xCB,0xCF,0xA1,0xEF,0xEB,0xE7,0xEF,0x0F,0xAF,0x4F,0x47,0xE6,0x67,0x00, 0xA7, 0
             -x0E, 0x40, 0xAE  };
  15          //     0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F    H    P BLANK    n  
             -  L     -            U
  16          const unsigned char code tab_LED[23] = {
  17                  0xFC,0x60,0xDA,0xF2,0x66,0xB6,0xBE,0xE4,0xFE,0xF6,0xEE,0x3E,0x9C,0x7A,0x9E,0x8E,0x6E,0xCE,0x00, 0xEC, 0x1
             -C, 0x02, 0x7C  };
  18          //     0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F    H    P BLANK    N  
             -  L     -            U
  19          const unsigned char code Point_tab_LED[23] = {
  20                  0xFD,0x61,0xDB,0xF3,0x67,0xB7,0xBF,0xE5,0xFF,0xF7,0xEF,0x3F,0x9D,0x7B,0x9F,0x8F,0x6F,0xCF,0x01, 0xED, 0x1
             -D, 0x03, 0x7D  };
  21          //     0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F    H    P BLANK    N  
             -  L     -            U
  22          /**************************************************************************************/
  23          void LED_Disp(unsigned char LEDs, unsigned long int disp_value)
  24          {
  25   1              unsigned char c  = 0;
  26   1              unsigned char D0 = 0;
  27   1              unsigned char D1 = 0;
  28   1              unsigned char D2 = 0;
  29   1              unsigned char D3 = 0;
  30   1              unsigned char D4 = 0;
  31   1              unsigned char D5 = 0;
  32   1              unsigned int D_value;
  33   1              
  34   1                D_value = disp_value;
  35   1                c = LEDs;
  36   1      
  37   1                      LED_DATA_Write(c,D5,D4,D3,D2,D1,D0);      // clean display to dark
  38   1        
  39   1         if (D_value < 0)
  40   1               { 
  41   2                       D0 = tab_LED[22];   //negtive
  42   2      
  43   2                       if (D_value < -10)
  44   2                        {
  45   3                          D1 = tab_LED[18];
  46   3                              D2 = tab_LED[18];
  47   3                          D3 = tab_LED[18];
  48   3                              D4 = Point_tab_LED[0];
  49   3                              D5 = tab_LED[D_value%10];
C51 COMPILER V7.50   LED                                                                   12/19/2013 16:33:13 PAGE 2   

  50   3                        }
  51   2                       if (D_value < -100)       //
  52   2                        {
  53   3                          D1 = tab_LED[18];
  54   3                              D2 = tab_LED[18];
  55   3                              D3 = tab_LED[18];
  56   3                              D4 = Point_tab_LED[D_value/10];
  57   3                              D5 = tab_LED[D_value%10];
  58   3                        }
  59   2                       if (D_value < -1000)
  60   2                        { 
  61   3                          D1 = tab_LED[18];
  62   3                              D2 = tab_LED[18];         //987
  63   3                              D3 = tab_LED[D_value/100];
  64   3                              D4 = Point_tab_LED[(D_value%100)/10];
  65   3                              D5 = tab_LED[D_value%10];
  66   3                        }
  67   2                       if(D_value < -10000)            ;//-9876
  68   2                        {
  69   3                          D1 = tab_LED[18];
  70   3                              D2 = tab_LED[D_value/1000];
  71   3                              D3 = tab_LED[(D_value%1000)/100];
  72   3                              D4 = Point_tab_LED[(D_value%100)/10];
  73   3                              D5 = tab_LED[D_value%10];
  74   3                        }
  75   2                }
  76   1               else
  77   1                {
  78   2                       if(D_value < 10)                ;  //99999
  79   2                        {
  80   3                          D0 = tab_LED[18];
  81   3                              D1 = tab_LED[18];
  82   3                              D2 = tab_LED[18];
  83   3                          D3 = tab_LED[18];
  84   3                              D4 = Point_tab_LED[0];
  85   3                              D5 = tab_LED[D_value%10];
  86   3                        }
  87   2                      if (D_value < 100)
  88   2                        { 
  89   3                          D0 = tab_LED[18];
  90   3                              D1 = tab_LED[18];
  91   3                              D2 = tab_LED[18];
  92   3                          D3 = tab_LED[18];
  93   3                              D4 = Point_tab_LED[D_value/10];
  94   3                              D5 = tab_LED[D_value%10];
  95   3                        }
  96   2                  if (D_value < 1000)
  97   2                        {
  98   3                          D0 = tab_LED[18];
  99   3                          D1 = tab_LED[18];
 100   3                              D2 = tab_LED[18];
 101   3                              D3 = tab_LED[D_value/100]; //987 
 102   3                              D4 = Point_tab_LED[(D_value%100)/10];
 103   3                              D5 = tab_LED[D_value%10];
 104   3                        }
 105   2                  if (D_value < 10000)
 106   2                        {
 107   3                          D0 = tab_LED[18];
 108   3                          D1 = tab_LED[18];
 109   3                              D2 = tab_LED[D_value/1000];     //9876
 110   3                          D3 = tab_LED[(D_value%1000)/100];
 111   3                              D4 = Point_tab_LED[(D_value%100)/10];
C51 COMPILER V7.50   LED                                                                   12/19/2013 16:33:13 PAGE 3   

 112   3                              D5 = tab_LED[D_value%10];
 113   3                        }
 114   2                      if (D_value < 100000)
 115   2                        {
 116   3                          D0 = tab_LED[18];
 117   3                          D1 = tab_LED[D_value/10000];   //98765
 118   3                              D2 = tab_LED[(D_value%10000)/1000];     
 119   3                          D3 = tab_LED[(D_value%1000)/100];   
 120   3                              D4 = Point_tab_LED[(D_value%100)/10];           
 121   3                              D5 = tab_LED[D_value%10];               
 122   3                        }
 123   2               }
 124   1                      LED_DATA_Write(c,D5,D4,D3,D2,D1,D0);
 125   1      }
 126          /***************************************/
 127          void SETUP_LED_Disp(unsigned char SETUP_SELECT, unsigned int disp_value)
 128          {
 129   1              unsigned char setup_status, D0, D1, D2, D3, D4, D5;
 130   1              unsigned int D_Value;
 131   1              
 132   1                setup_status = SETUP_SELECT;
 133   1                D_Value = disp_value;
 134   1                
 135   1         if (setup_status ==  0)              //C_F
 136   1               { 
 137   2                 if(D_Value == 0)
 138   2                   { D0 =     tab_LED[17]; // P1xxCx
 139   3                         D1 = tab_LED[1] ;
 140   3                         D2 = tab_LED[18];
 141   3                         D3 = tab_LED[18];
 142   3                         D4 = tab_LED[12];
 143   3                         D5 = tab_LED[18];
 144   3                       }
 145   2                      if(D_Value == 1)
 146   2                   { D0 =     tab_LED[17];  //P1xxFx
 147   3                         D1 = tab_LED[1] ;
 148   3                         D2 = tab_LED[18];
 149   3                         D3 = tab_LED[18];
 150   3                         D4 = tab_LED[15];
 151   3                         D5 = tab_LED[18];
 152   3                       }
 153   2          }
 154   1         else
 155   1              {
 156   2                if (setup_status ==  1)               //TC_OFFSET
 157   2              {
 158   3                     D0 = tab_LED[17];
 159   3                         D1 = tab_LED[2];
 160   3                      }
 161   2                if (setup_status ==  2)               //TC_SPAN
 162   2              {
 163   3                     D0 = tab_LED[17];
 164   3                         D1 = tab_LED[2];
 165   3                      }
 166   2                if (setup_status ==  3)               //RTD_OFFSET
 167   2              {
 168   3                     D0 = tab_LED[17];
 169   3                         D1 = tab_LED[2];
 170   3                      }
 171   2                if (setup_status ==  4)               //RTD_SPAN
 172   2              {
 173   3                     D0 = tab_LED[17];
C51 COMPILER V7.50   LED                                                                   12/19/2013 16:33:13 PAGE 4   

 174   3                         D1 = tab_LED[2];
 175   3                      }
 176   2                if (setup_status ==  5)               //mV_OFFSET
 177   2              {
 178   3                     D0 = tab_LED[17];
 179   3                         D1 = tab_LED[2];
 180   3                      }
 181   2                if (setup_status ==  6)               //mV_SPAN
 182   2              {
 183   3                     D0 = tab_LED[17];
 184   3                         D1 = tab_LED[2];
 185   3                      }
 186   2                if (setup_status ==  7)               //mA_OFFSET
 187   2              {
 188   3                     D0 = tab_LED[17];
 189   3                         D1 = tab_LED[2];
 190   3                      }
 191   2                if (setup_status ==  8)               //mA_SPAN
 192   2              {
 193   3                     D0 = tab_LED[17];
 194   3                         D1 = tab_LED[2];
 195   3                      }
 196   2                if (setup_status ==  9)               //TC_OFFSET
 197   2              {
 198   3                     D0 = tab_LED[17];
 199   3                         D1 = tab_LED[2];
 200   3                      }
 201   2                if (setup_status ==  10)              //TC_OFFSET
 202   2              {
 203   3                     D0 = tab_LED[17];
 204   3                         D1 = tab_LED[2];
 205   3                      }
 206   2                if (setup_status ==  11)              //TC_OFFSET
 207   2              {
 208   3                     D0 = tab_LED[17];
 209   3                         D1 = tab_LED[2];
 210   3                      }
 211   2                if (setup_status ==  12)              //TC_OFFSET
 212   2              {
 213   3                     D0 = tab_LED[17];
 214   3                         D1 = tab_LED[2];
 215   3                      }
 216   2                if (setup_status ==  13)              //TC_OFFSET
 217   2              {
 218   3                     D0 = tab_LED[17];
 219   3                         D1 = tab_LED[2];
 220   3                      }
 221   2                if (setup_status ==  14)              //TC_OFFSET
 222   2              {
 223   3                     D0 = tab_LED[17];
 224   3                         D1 = tab_LED[2];
 225   3                      }
 226   2                if (setup_status ==  15)              //TC_OFFSET
 227   2              {
 228   3                     D0 = tab_LED[17];
 229   3                         D1 = tab_LED[2];
 230   3                      }
 231   2                if (setup_status ==  16)              //TC_OFFSET
 232   2              {
 233   3                     D0 = tab_LED[17];
 234   3                         D1 = tab_LED[2];
 235   3                      }
C51 COMPILER V7.50   LED                                                                   12/19/2013 16:33:13 PAGE 5   

 236   2                if (setup_status ==  17)              //TC_OFFSET
 237   2              {
 238   3                     D0 = tab_LED[17];
 239   3                         D1 = tab_LED[2];
 240   3                  }
 241   2                if(D_Value < 10)               ;  //99999
 242   2                        {
 243   3                              D2 = tab_LED[18];
 244   3                          D3 = tab_LED[18];
 245   3                              D4 = Point_tab_LED[0];
 246   3                              D5 = tab_LED[D_Value%10];
 247   3                        }
 248   2                      if (D_Value < 100)
 249   2                        { 
 250   3                              D2 = tab_LED[18];
 251   3                          D3 = tab_LED[18];
 252   3                              D4 = Point_tab_LED[D_Value/10];
 253   3                              D5 = tab_LED[D_Value%10];
 254   3                        }
 255   2                  if (D_Value < 1000)
 256   2                        {
 257   3                              D2 = tab_LED[18];
 258   3                              D3 = tab_LED[D_Value/100]; //987 
 259   3                              D4 = Point_tab_LED[(D_Value%100)/10];
 260   3                              D5 = tab_LED[D_Value%10];
 261   3                        }
 262   2                  if (D_Value < 10000)
 263   2                        {
 264   3                              D2 = tab_LED[D_Value/1000];     //9876
 265   3                          D3 = tab_LED[(D_Value%1000)/100];
 266   3                              D4 = Point_tab_LED[(D_Value%100)/10];
 267   3                              D5 = tab_LED[D_Value%10];
 268   3                        }
 269   2                      if (D_Value < 100000)
 270   2                        {
 271   3                          D1 = tab_LED[D_Value/10000];   //98765
 272   3                              D2 = tab_LED[(D_Value%10000)/1000];     
 273   3                          D3 = tab_LED[(D_Value%1000)/100];   
 274   3                              D4 = Point_tab_LED[(D_Value%100)/10];           
 275   3                              D5 = tab_LED[D_Value%10];               
 276   3                        }
 277   2                 }
 278   1           LED_DATA_Write(0,D5,D4,D3,D2,D1,D0);
 279   1      }
 280          /*********************************************************/
 281          void _BitDly(void)               // wait 4.7uS, or thereabouts
 282          {                                   // tune to xtal. This works at 11.0592MHz
 283   1              unsigned char   i;
 284   1              
 285   1              for (i=0; i<0x12; i++);
 286   1      }
 287          /*********************************/
 288          void LED_Init(void)
 289          {
 290   1              unsigned int i;
 291   1          
 292   1              LED1_SDA = 0;
 293   1              LED1_SCL = 0;
 294   1              LED2_SDA = 0;
 295   1              LED2_SCL = 0;
 296   1              LED3_SDA = 0;
 297   1              LED3_SCL = 0;
C51 COMPILER V7.50   LED                                                                   12/19/2013 16:33:13 PAGE 6   

 298   1      
 299   1              _BitDly();
 300   1              _BitDly();
 301   1              _BitDly();
 302   1              _BitDly();
 303   1      
 304   1              for(i = 0; i < 0x100; i++);   
 305   1              
 306   1              LED_Disp(1,0);
 307   1              LED_Disp(2,0);
 308   1              LED_Disp(3,0);
 309   1      }
 310          /***********************************/
 311          void LED_Cls(void)
 312          {
 313   1              LED_Disp(1,0);
 314   1              LED_Disp(2,0);
 315   1              LED_Disp(3,0);
 316   1      }
 317          /**********************************/
 318          void  LED_DATA_Write(unsigned char prt,unsigned char D5,unsigned char D4,unsigned char D3,unsigned char D2
             -,unsigned char D1,unsigned char D0)
 319          {
 320   1          unsigned char c, DISP_CODE, D_count, D_time = 6;
 321   1                                  c = prt;  DISP_CODE = D0 ;
 322   1                if (c == 0)
 323   1                  {
 324   2                         if(D_time != 0)
 325   2                           {
 326   3                                  D_count =  8;
 327   3                              LED1_SCL = 0;
 328   3      
 329   3                                 if(D_count != 0)
 330   3                                   {
 331   4                                 if(DISP_CODE & 0x80) {LED1_SDA = 1;}
 332   4                                   _BitDly();
 333   4                                   LED1_SCL = 1 ;
 334   4                                       _BitDly();
 335   4                                           LED1_SCL = 0;
 336   4                                               LED1_SDA = 0;
 337   4                                           DISP_CODE = DISP_CODE << 1;
 338   4                                           D_count--;
 339   4                                   }
 340   3                               D_time--;
 341   3                                       if (D_time  == 5)  DISP_CODE = D1;
 342   3                                       if (D_time  == 4)  DISP_CODE = D2;
 343   3                                       if (D_time  == 3)  DISP_CODE = D3;
 344   3                                       if (D_time  == 2)  DISP_CODE = D4;
 345   3                                       if (D_time  == 1)  DISP_CODE = D5;
 346   3                                 }
 347   2               }
 348   1                  if(c == 1)
 349   1                   {
 350   2                         if(D_time != 0)
 351   2                           {
 352   3                                  D_count =  8;
 353   3                              LED2_SCL = 0;
 354   3      
 355   3                                 if(D_count != 0)
 356   3                                   {
 357   4                                 if(DISP_CODE & 0x80) {LED2_SDA = 1;}
 358   4                                   _BitDly();
C51 COMPILER V7.50   LED                                                                   12/19/2013 16:33:13 PAGE 7   

 359   4                                   LED2_SCL = 1 ;
 360   4                                       _BitDly();
 361   4                                           LED2_SCL = 0;
 362   4                                               LED2_SDA = 0;
 363   4                                           DISP_CODE = DISP_CODE << 1;
 364   4                                           D_count--;
 365   4                                   }
 366   3                               D_time--;
 367   3                                       if (D_time  == 5)  DISP_CODE = D1;
 368   3                                       if (D_time  == 4)  DISP_CODE = D2;
 369   3                                       if (D_time  == 3)  DISP_CODE = D3;
 370   3                                       if (D_time  == 2)  DISP_CODE = D4;
 371   3                                       if (D_time  == 1)  DISP_CODE = D5;
 372   3                                 }
 373   2              }
 374   1                 if(c == 2)
 375   1                  {
 376   2                         if(D_time != 0)
 377   2                           {
 378   3                                  D_count =  8;
 379   3                              LED3_SCL = 0;
 380   3      
 381   3                                 if(D_count != 0)
 382   3                                   {
 383   4                                 if(DISP_CODE & 0x80) {LED3_SDA = 1;}
 384   4                                   _BitDly();
 385   4                                   LED3_SCL = 1;
 386   4                                       _BitDly();
 387   4                                           LED3_SCL = 0;
 388   4                                               LED3_SDA = 0;
 389   4                                           DISP_CODE = DISP_CODE << 1;
 390   4                                           D_count--;
 391   4                                   }
 392   3                               D_time--;
 393   3                                       if (D_time  == 5)  DISP_CODE = D1;
 394   3                                       if (D_time  == 4)  DISP_CODE = D2;
 395   3                                       if (D_time  == 3)  DISP_CODE = D3;
 396   3                                       if (D_time  == 2)  DISP_CODE = D4;
 397   3                                       if (D_time  == 1)  DISP_CODE = D5;
 398   3                                 }
 399   2               }
 400   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2751    ----
   CONSTANT SIZE    =     46    ----
   XDATA SIZE       =   ----      29
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
