C51 COMPILER V9.02   DAC6571_MA                                                            07/30/2015 20:58:17 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE DAC6571_MA
OBJECT MODULE PLACED IN DAC6571_mA.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE DAC6571_mA.C OMF2 BROWSE DEBUG

line level    source

   1          /***********************************************
   2            PRODUCT FOR NEWCAL MIX_TEMP FUNCTION
   3             CPU : MPC82G516
   4             BEGIN DATE: 2013.11.01
   5             FINISHED  : 2014.01.25
   6             WRITEBY   :JOHNSON LIN
   7             DAC6571mA  setup   SET 1001 0000 FOR A0 TYPE 
   8              8CH =  pga =1 ,32767BITS
   9                  4mA = 800mV , 20mA = 4000mV   
  10          **************************************************/
  11          #include <MG82FE564.H>
  12          #include <DAC6571_mA.h>
  13          #include <IO_DEFINE.h>
  14          #define   mA_COM  0x98    //    10011000
  15          
  16          unsigned char  _mA_ack;      // bit array of error types
  17          unsigned char V_Hi,V_Lo;
  18          extern unsigned char  NP_COD ;
  19          extern void delay(unsigned int i);
  20          extern idata unsigned char Soft_Timer[8];
  21          
  22          /********************************************************/
  23          void _mABitDly(void)               // wait 4.7uS, or thereabouts
  24          {                                   // tune to xtal. This works at 11.0592MHz
  25   1              unsigned char   k;
  26   1              
  27   1              for (k=0; k<0x12; k++);
  28   1      }
  29          /*****************************************************/
  30          void DAC6571mA_Init(void)
  31          {
  32   1              unsigned int i;
  33   1              mA_SCL = 1 ;
  34   1              _mABitDly();
  35   1              mA_SDA = 1 ;
  36   1              _mABitDly();
  37   1              _mABitDly();
  38   1              _mABitDly();
  39   1              _mABitDly();
  40   1              mA_SDA = 0;
  41   1      
  42   1              for(i = 0; i < 0x100; i++);    
  43   1      }
  44          /*********************************************************************/
  45          void DAC6571mA_start(void)
  46          {
  47   1              mA_SDA = 1 ;
  48   1              _mABitDly();
  49   1              mA_SCL = 1 ;
  50   1              _mABitDly();
  51   1         mA_SDA = 0 ;
  52   1         _mABitDly();
  53   1         mA_SCL = 0 ;
  54   1      }
  55          /*************************************/
C51 COMPILER V9.02   DAC6571_MA                                                            07/30/2015 20:58:17 PAGE 2   

  56          void DAC6571mA_stop(void)
  57          {
  58   1              mA_SCL = 1 ;
  59   1              _mABitDly();
  60   1          mA_SDA = 1 ;
  61   1              _mABitDly();
  62   1      }
  63          /********************************************/
  64          void DAC6571mA_write_byte(unsigned char bt)
  65          {
  66   1              idata unsigned char i;
  67   1      
  68   1              _mA_ack = TRUE;                                         //default have ack
  69   1        
  70   1              for (i=0; i<8; i++)
  71   1              {
  72   2                      if (bt & 0x80)
  73   2                      mA_SDA = 1;                      // send each bit, MSB first
  74   2                      else
  75   2                              mA_SDA = 0;
  76   2                      mA_SCL = 1;
  77   2                      _mABitDly();
  78   2                      mA_SCL = 0;
  79   2                      _mABitDly();
  80   2                      bt = bt << 1;
  81   2              }
  82   1      
  83   1              mA_SDA = 1;                       // change input and listen for ACK
  84   1              mA_SCL = 1;
  85   1              _mABitDly();
  86   1              if (mA_SDA)
  87   1                      _mA_ack = FALSE;                        // ack didn't happen, may be nothing out there
  88   1              mA_SCL = 0;
  89   1              _mABitDly();
  90   1      }
  91          /********************************************************/
  92          void Set_mA(unsigned int mA_Value)
  93          {
  94   1       unsigned char HI_CODE, LO_CODE;                        // 0000 00 dd dddd dddd
  95   1      
  96   1                      if(NP_COD == 0) 
  97   1                        {mA_Value = mA_Value/2;}   
  98   1      
  99   1               LO_CODE = mA_Value ;
 100   1               HI_CODE = mA_Value >> 8 ;                      // 0000 dddd dddd ddxx 
 101   1      //       HI_CODE = HI_CODE &0x0f;
 102   1               DAC6571mA_start();                                                             //send start bit
 103   1               DAC6571mA_write_byte(0x98);
 104   1               DAC6571mA_write_byte(0x10);               //send hi address
 105   1               DAC6571mA_write_byte(HI_CODE);               //send lo address
 106   1               DAC6571mA_write_byte(LO_CODE);
 107   1               DAC6571mA_stop();                              //stop
 108   1      }
 109          /*****************************************************/
 110          void mA_Delay(unsigned int n)
 111          {
 112   1              while(n--);
 113   1      }
 114          /****************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.02   DAC6571_MA                                                            07/30/2015 20:58:17 PAGE 3   

   CODE SIZE        =    193    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----       1
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
